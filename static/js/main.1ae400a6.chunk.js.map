{"version":3,"sources":["config/i18n.js","assets/theme/theme.js","assets/theme/typography.js","components/ScrollToTop.js","Routes.js","contexts/themeContext.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["resources","en","translation","fr","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","detection","order","caches","baseTheme","breakpoints","values","xs","sm","md","lg","xl","navbarHeight","mobileNavbarHeight","typography","fontFamily","join","h1","fontWeight","fontSize","h2","h3","h4","h5","h6","overline","body1","body2","darkTheme","createTheme","palette","background","default","primary","main","contrastText","secondary","text","action","disabled","disabledBackground","logoColor","lightTheme","backgroundSecondary","bg","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","MainHome","lazy","NotFound","Navbar","Footer","Routes","exact","path","component","React","createContext","isDarkMode","setIsDarkMode","App","useState","matchMedia","matches","fallback","Provider","value","ThemeProvider","theme","CssBaseline","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1ae400a6.chunk.js","sourcesContent":["import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport en from \"../assets/translations/en.json\";\r\nimport fr from \"../assets/translations/fr.json\";\r\n\r\nconst resources = {\r\n    en: {\r\n        translation: en,\r\n    },\r\n    fr: {\r\n        translation: fr,\r\n    },\r\n};\r\n\r\ni18n.use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: \"en\",\r\n        detection: {\r\n            order: [\"cookie\", \"localStorage\", \"navigator\", \"htmlTag\"],\r\n            caches: [\"cookie\"],\r\n        },\r\n        // interpolation: {\r\n        //     escapeValue: false,\r\n        // },\r\n    });\r\n\r\nexport default i18n;\r\n","import { createTheme } from \"@material-ui/core\";\r\nimport typography from \"./typography\";\r\n\r\nconst baseTheme = {\r\n    breakpoints: {\r\n        values: {\r\n            xs: 0,\r\n            sm: 700,\r\n            md: 960,\r\n            lg: 1320,\r\n            xl: 1920,\r\n        },\r\n    },\r\n    navbarHeight: \"70px\",\r\n    mobileNavbarHeight: \"55px\",\r\n    typography,\r\n    // overrides: {\r\n    //     MuiButton: {\r\n    //         root: {\r\n    //             textTransform: \"none\",\r\n    //             fontSize: \"16px\",\r\n    //         },\r\n    //         text: {\r\n    //             letterSpacing: \"2px\",\r\n    //             borderRadius: 0,\r\n    //             \"&:hover\": {\r\n    //                 color: \"rgb(230,230,230)\",\r\n    //                 backgroundColor: \"inherit\",\r\n    //             },\r\n    //         },\r\n    //     },\r\n    // },\r\n};\r\n\r\nconst darkTheme = createTheme({\r\n    palette: {\r\n        background: {\r\n            default: \"#1A1A1A \",\r\n        },\r\n        primary: {\r\n            main: \"#FF4C29\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        secondary: {\r\n            main: \"#2C394B\",\r\n            contrastText: \"#fff\",\r\n        },\r\n        text: {\r\n            primary: \"#FFF\",\r\n            secondary: \"rgb(200,200,200)\",\r\n        },\r\n        action: {\r\n            disabled: \"rgb(70,70,70)\",\r\n            disabledBackground: \"rgb(150,150,150)\",\r\n        },\r\n    },\r\n    logoColor:\"#fff\",\r\n    ...baseTheme\r\n});\r\n\r\nconst lightTheme = createTheme({\r\n    palette: {\r\n        background: {\r\n            default: \"#DEBA9D\",\r\n        },\r\n        primary: {\r\n            main: \"#9E7777\",\r\n            contrastText: \"#000\",\r\n        },\r\n        secondary: {\r\n            main: \"#6F4C5B\",\r\n            contrastText: \"rgb(230,230,230)\",\r\n        },\r\n        text: {\r\n            primary: \"#000\",\r\n            secondary: \"rgb(30,30,30)\",\r\n        },\r\n        action: {\r\n            disabled: \"rgb(70,70,70)\",\r\n            disabledBackground: \"rgb(150,150,150)\",\r\n        },\r\n    },\r\n    backgroundSecondary: {\r\n        bg : \"#6F4C5B\",\r\n        text: \"rgb(230,230,230) \"\r\n    },\r\n    logoColor:\"#6F4C5B\",\r\n    ...baseTheme\r\n});\r\n\r\nexport { darkTheme, lightTheme };\r\n","// eslint-disable-next-line\r\nexport default {\r\n    fontFamily: [\"Cairo\", \"Roboto\", '\"Helvetica Neue\"', \"sans-serif\"].join(\",\"),\r\n    h1: {\r\n        fontWeight: 500,\r\n        fontSize: 60,\r\n    },\r\n    h2: {\r\n        fontWeight: 500,\r\n        fontSize: 50,\r\n    },\r\n    h3: {\r\n        fontWeight: 500,\r\n        fontSize: 40,\r\n    },\r\n    h4: {\r\n        fontWeight: 500,\r\n        fontSize: 30,\r\n    },\r\n    h5: {\r\n        fontWeight: 500,\r\n        fontSize: 25,\r\n    },\r\n    h6: {\r\n        fontWeight: 500,\r\n        fontSize: 20,\r\n    },\r\n    overline: {\r\n        fontWeight: 500,\r\n    },\r\n    body1: {\r\n        fontWeight: 300,\r\n        fontSize: 18,\r\n    },\r\n    body2: {\r\n        fontWeight: 300,\r\n        fontSize: 18,\r\n    },\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React, { lazy } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nconst MainHome = lazy(() => import(\"./pages/MainHome\"));\r\nconst NotFound = lazy(() => import(\"./pages/NotFound\"));\r\nconst Navbar = lazy(() => import(\"./components/Navbar\"));\r\nconst Footer = lazy(() => import(\"./components/Footer\"));\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Switch>\r\n                <Route exact path=\"/\" component={MainHome} />\r\n                <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\r\n\r\nexport default React.createContext({\r\n    isDarkMode: true,\r\n    setIsDarkMode: () => {},\r\n});\r\n","import { useState, useEffect, Suspense } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport { darkTheme, lightTheme } from \"./assets/theme\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport ScrollToTop from \"./components/ScrollToTop\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\nimport ThemeContext from \"./contexts/themeContext\";\r\n\r\nfunction App() {\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n    useEffect(() => {\r\n        if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n            setIsDarkMode(true);\r\n        } else {\r\n            setIsDarkMode(false);\r\n        }\r\n    }, []);\r\n    return (\r\n        <Router>\r\n            <Suspense fallback={<div>laoding...</div>}>\r\n                <ThemeContext.Provider value={{ isDarkMode, setIsDarkMode }}>\r\n                        <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n                            <CssBaseline />\r\n                            <ScrollToTop />\r\n                            <Routes />\r\n                        </ThemeProvider>\r\n                </ThemeContext.Provider>\r\n            </Suspense>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './config/i18n';\nimport './assets/App.css'\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}