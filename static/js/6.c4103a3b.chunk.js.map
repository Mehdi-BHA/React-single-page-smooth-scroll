{"version":3,"sources":["containers/HomeContainer.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js","../node_modules/@material-ui/core/esm/Container/Container.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","pages/NotFound/NotFound.js","pages/NotFound/index.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/@material-ui/core/esm/utils/capitalize.js"],"names":["useStyles","makeStyles","theme","container","minHeight","display","alignItems","justifyContent","paddingTop","navbarHeight","paddingBottom","spacing","breakpoints","down","HomeContainer","children","rest","classes","className","stylesOrCreator","options","arguments","length","undefined","makeStylesWithoutDefault","_extends","defaultTheme","Container","React","props","ref","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","_objectWithoutProperties","clsx","root","concat","capitalize","String","withStyles","_defineProperty","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","margin","typography","caption","button","overline","srOnly","position","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","NotFound","toVal","mix","k","y","str","Array","isArray","tmp","x","i","string","Error","_formatMuiErrorMessage","charAt","toUpperCase","slice"],"mappings":"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","file":"static/js/6.c4103a3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, Container } from \"@material-ui/core\";\r\n\r\nconst HomeContainer = ({ children, ...rest }) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Container className={classes.container} {...rest}>\r\n            {children}\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        minHeight: \"100vh\",\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        justifyContent:\"center\",\r\n        paddingTop: `calc( 0px + ${theme.navbarHeight} ) `,\r\n        paddingBottom: theme.spacing(4),\r\n        [theme.breakpoints.down('sm')]: {\r\n            paddingTop: theme.navbarHeight,\r\n          },\r\n    },\r\n}));\r\n\r\nexport default HomeContainer;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport HomeContainer from \"../../containers/HomeContainer\";\r\n\r\nconst NotFound = () => {\r\n  return <HomeContainer><Typography variant=\"h1\">NOT FOUND</Typography></HomeContainer>;\r\n};\r\n\r\nexport default NotFound;\r\n","import NotFound from \"./NotFound\";\r\n\r\nexport default NotFound;\r\n","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\n// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}"],"sourceRoot":""}